name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '0 0 * * MON'
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  # R packages are cached for speed. Invalidate cache weekly.
  R_SYSTEM_LIBRARY_PATH: /usr/local/lib/R/site-library

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      #- name: set timestamp as environment variables
      #  # https://lannonbr.com/blog/2020-04-16-gh-actions-job-outputs
      #  # https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs
      #  run: echo "TIMESTAMP=$(date -d '${{ github.event.head_commit.timestamp }}' +'%Y-%m')" >> $GITHUB_ENV
      
      - name: Checkout repository
        uses: actions/checkout@v4
      
      #- name: Cache R packages
      #  uses: actions/cache@v4
      #  with:
      #    path: ${{ env.R_SYSTEM_LIBRARY_PATH }}
      #    key: ${{ runner.os }}-r-library-${{ env.TIMESTAMP }}
      #    restore-keys: |
      #      ${{ runner.os }}-r-library-${{ env.TIMESTAMP }}

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_GITHUB_TOKEN_RSTUDIO_SECRET }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          #cache-from: type=gha
          #cache-to: type=gha,mode=max
          cache-from: type=registry,ref=${{ steps.meta.outputs.tags }}
          cache-to: type=inline
